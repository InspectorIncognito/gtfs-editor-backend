# Generated by Django 4.2.8 on 2024-02-05 14:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rest_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0003_user_password_recovery_token_user_recovery_timestamp'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_id', models.CharField(max_length=50)),
                ('agency_name', models.CharField(max_length=50)),
                ('agency_url', models.URLField()),
                ('agency_timezone', models.CharField(max_length=20)),
                ('agency_lang', models.CharField(blank=True, max_length=10, null=True)),
                ('agency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('agency_fare_url', models.URLField(blank=True, max_length=255, null=True)),
                ('agency_email', models.EmailField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FareAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fare_id', models.CharField(max_length=50)),
                ('price', models.FloatField()),
                ('currency_type', models.CharField(max_length=10)),
                ('payment_method', models.IntegerField()),
                ('transfers', models.IntegerField(blank=True, null=True)),
                ('transfer_duration', models.IntegerField()),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.agency')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_id', models.CharField(max_length=50)),
                ('level_index', models.FloatField()),
                ('level_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('creation_status', models.CharField(choices=[('empty', 'Empty'), ('loading_gtfs', 'Loading GTFS'), ('from_gtfs', 'From GTFS')], default='empty', max_length=20)),
                ('loading_gtfs_job_id', models.UUIDField(null=True)),
                ('loading_gtfs_error_message', models.CharField(default=None, max_length=100, null=True)),
                ('last_modification', models.DateTimeField(default=django.utils.timezone.now)),
                ('gtfs_file', models.FileField(null=True, upload_to=rest_api.models.gtfs_update_to)),
                ('gtfs_file_updated_at', models.DateTimeField(null=True)),
                ('gtfs_building_and_validation_status', models.CharField(choices=[('queued', 'Queued'), ('building', 'Building'), ('validating', 'Validating'), ('finished', 'Finished'), ('error', 'Error'), ('canceled', 'Canceled')], default=None, max_length=20, null=True)),
                ('gtfs_building_duration', models.DurationField(default=None, null=True)),
                ('gtfs_validation_message', models.TextField(default=None, null=True)),
                ('gtfs_validation_error_number', models.IntegerField(default=None, null=True)),
                ('gtfs_validation_warning_number', models.IntegerField(default=None, null=True)),
                ('gtfs_validation_duration', models.DurationField(default=None, null=True)),
                ('building_and_validation_job_id', models.UUIDField(null=True)),
                ('envelope', models.JSONField(default=rest_api.models.get_empty_envelope)),
                ('agency_error_number', models.IntegerField(default=0)),
                ('stops_error_number', models.IntegerField(default=0)),
                ('routes_error_number', models.IntegerField(default=0)),
                ('trips_error_number', models.IntegerField(default=0)),
                ('stop_times_error_number', models.IntegerField(default=0)),
                ('calendar_error_number', models.IntegerField(default=0)),
                ('calendar_dates_error_number', models.IntegerField(default=0)),
                ('fare_attributes_error_number', models.IntegerField(default=0)),
                ('fare_rules_error_number', models.IntegerField(default=0)),
                ('shapes_error_number', models.IntegerField(default=0)),
                ('frequencies_error_number', models.IntegerField(default=0)),
                ('transfers_error_number', models.IntegerField(default=0)),
                ('pathways_error_number', models.IntegerField(default=0)),
                ('levels_error_number', models.IntegerField(default=0)),
                ('feed_info_error_number', models.IntegerField(default=0)),
                ('agency_warning_number', models.IntegerField(default=0)),
                ('stops_warning_number', models.IntegerField(default=0)),
                ('routes_warning_number', models.IntegerField(default=0)),
                ('trips_warning_number', models.IntegerField(default=0)),
                ('stop_times_warning_number', models.IntegerField(default=0)),
                ('calendar_warning_number', models.IntegerField(default=0)),
                ('calendar_dates_warning_number', models.IntegerField(default=0)),
                ('fare_attributes_warning_number', models.IntegerField(default=0)),
                ('fare_rules_warning_number', models.IntegerField(default=0)),
                ('shapes_warning_number', models.IntegerField(default=0)),
                ('frequencies_warning_number', models.IntegerField(default=0)),
                ('transfers_warning_number', models.IntegerField(default=0)),
                ('pathways_warning_number', models.IntegerField(default=0)),
                ('levels_warning_number', models.IntegerField(default=0)),
                ('feed_info_warning_number', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_id', models.CharField(max_length=50)),
                ('route_short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('route_long_name', models.CharField(blank=True, max_length=200, null=True)),
                ('route_desc', models.CharField(blank=True, max_length=50, null=True)),
                ('route_type', models.IntegerField()),
                ('route_url', models.URLField(blank=True, null=True)),
                ('route_color', models.CharField(blank=True, max_length=10, null=True)),
                ('route_text_color', models.CharField(blank=True, max_length=10, null=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.agency')),
            ],
            options={
                'unique_together': {('agency', 'route_id')},
            },
        ),
        migrations.CreateModel(
            name='Shape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape_id', models.CharField(max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'shape_id')},
            },
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_id', models.CharField(max_length=50)),
                ('stop_code', models.CharField(blank=True, max_length=50, null=True)),
                ('stop_name', models.CharField(max_length=200)),
                ('stop_lat', models.FloatField()),
                ('stop_lon', models.FloatField()),
                ('stop_url', models.URLField(blank=True, null=True)),
                ('stop_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('zone_id', models.CharField(blank=True, max_length=50, null=True)),
                ('location_type', models.IntegerField(blank=True, null=True)),
                ('stop_timezone', models.CharField(blank=True, max_length=200, null=True)),
                ('wheelchair_boarding', models.CharField(blank=True, max_length=200, null=True)),
                ('platform_code', models.CharField(blank=True, max_length=200, null=True)),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rest_api.level')),
                ('parent_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rest_api.stop')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'stop_id')},
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.CharField(max_length=50)),
                ('service_id', models.CharField(max_length=50)),
                ('trip_headsign', models.CharField(blank=True, max_length=100, null=True)),
                ('direction_id', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('trip_short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('block_id', models.CharField(blank=True, max_length=50, null=True)),
                ('wheelchair_accessible', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
                ('bikes_allowed', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.route')),
                ('shape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rest_api.shape')),
            ],
            options={
                'unique_together': {('project', 'trip_id')},
            },
        ),
        migrations.CreateModel(
            name='Pathway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathway_id', models.CharField(max_length=50)),
                ('pathway_mode', models.IntegerField()),
                ('is_bidirectional', models.BooleanField()),
                ('from_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_from', to='rest_api.stop')),
                ('to_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_to', to='rest_api.stop')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project'),
        ),
        migrations.CreateModel(
            name='FeedInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_publisher_name', models.CharField(max_length=50)),
                ('feed_publisher_url', models.URLField()),
                ('feed_lang', models.CharField(max_length=10)),
                ('feed_start_date', models.DateField()),
                ('feed_end_date', models.DateField()),
                ('feed_version', models.CharField(max_length=50)),
                ('feed_contact_email', models.EmailField(max_length=254, null=True)),
                ('feed_contact_url', models.URLField(null=True)),
                ('feed_id', models.CharField(max_length=50)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
            ],
        ),
        migrations.CreateModel(
            name='FareRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_id', models.CharField(blank=True, max_length=200, null=True)),
                ('destination_id', models.CharField(blank=True, max_length=200, null=True)),
                ('contains_id', models.CharField(blank=True, max_length=200, null=True)),
                ('fare_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.fareattribute')),
                ('route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rest_api.route')),
            ],
        ),
        migrations.AddField(
            model_name='fareattribute',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project'),
        ),
        migrations.AddField(
            model_name='agency',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project'),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('min_transfer_time', models.IntegerField(blank=True, null=True)),
                ('from_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_stop', to='rest_api.stop')),
                ('to_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_stop', to='rest_api.stop')),
            ],
            options={
                'unique_together': {('from_stop', 'to_stop')},
            },
        ),
        migrations.CreateModel(
            name='StopTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_sequence', models.IntegerField()),
                ('arrival_time', models.DurationField(blank=True, null=True)),
                ('departure_time', models.DurationField(blank=True, null=True)),
                ('stop_headsign', models.CharField(blank=True, max_length=50, null=True)),
                ('pickup_type', models.IntegerField(blank=True, null=True)),
                ('drop_off_type', models.IntegerField(blank=True, null=True)),
                ('continuous_pickup', models.IntegerField(blank=True, null=True)),
                ('continuous_dropoff', models.IntegerField(blank=True, null=True)),
                ('shape_dist_traveled', models.FloatField(blank=True, null=True)),
                ('timepoint', models.IntegerField(blank=True, null=True)),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.stop')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stop_times', to='rest_api.trip')),
            ],
            options={
                'unique_together': {('trip', 'stop_sequence')},
            },
        ),
        migrations.CreateModel(
            name='ShapePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape_pt_sequence', models.IntegerField()),
                ('shape_pt_lat', models.FloatField()),
                ('shape_pt_lon', models.FloatField()),
                ('shape_dist_traveled', models.FloatField(blank=True, default=None, null=True)),
                ('shape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='rest_api.shape')),
            ],
            options={
                'unique_together': {('shape', 'shape_pt_sequence')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='level',
            unique_together={('project', 'level_id', 'level_index')},
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('headway_secs', models.PositiveIntegerField()),
                ('exact_times', models.IntegerField()),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.trip')),
            ],
            options={
                'unique_together': {('trip', 'start_time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='fareattribute',
            unique_together={('project', 'fare_id')},
        ),
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('exception_type', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'service_id', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=50)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('start_date', models.DateField(default=False)),
                ('end_date', models.DateField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.project')),
            ],
            options={
                'unique_together': {('project', 'service_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='agency',
            unique_together={('project', 'agency_id')},
        ),
    ]
